services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #network_mode: "host"
    ports:
    - "5432:5432"
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data

  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly:latest'
    ulimits:
      memlock: -1
      #network_mode: "host"
    ports:
    - "6379:6379"
    volumes:
      - ./docker/dragonfly_data:/data
      #restart: always

  rabbitmq:
    image: rabbitmq:management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      #    network_mode: "host"
    ports:
    - "5672:5672"
    - "15672:15672"
    - "25672:25672"
    volumes:
      - ./docker/rabbitmq_data:/var/lib/rabbitmq

  emqx:
    image: emqx:5.7.0
    #environment:
    #  - EMQX_LOADED_PLUGINS=emqx_recon,emqx_retainer,emqx_management,emqx_dashboard
    ports:
    - 1883:1883
    - 8081:8081
    - 8083:8083
    - 8084:8084
    - 8883:8883
    - 18083:18083
    volumes:
      - ./docker/emqx_data:/opt/emqx/data


# You could also choose to use Docker secrets for managing sensitive data
secrets:
  db_user:
    file: /run/secrets/db_user
  db_password:
    file: /run/secrets/db_password
